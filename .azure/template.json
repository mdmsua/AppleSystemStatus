{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroupName": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "sqlServerSaLogin": {
            "type": "string"
        },
        "sqlServerSaPassword": {
            "type": "securestring"
        },
        "sqlServerLogin": {
            "type": "string"
        },
        "sqlServerPassword": {
            "type": "securestring"
        },
        "objectId": {
            "type": "string"
        },
        "tenantId": {
            "type": "string"
        },
        "containerRegistryName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "insightsName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "serverFarmName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "siteName": {
            "type": "string"
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "[parameters('resourceGroupName')]"
        }
    },
    "variables": {
        "defaultLocation": "germanywestcentral"
    },
    "functions": [
        {
            "namespace": "sql",
            "members": {
                "getConnectionString": {
                    "parameters": [
                        {
                            "name": "server",
                            "type": "string"
                        },
                        {
                            "name": "database",
                            "type": "string"
                        },
                        {
                            "name": "user",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "securestring"
                        }
                    ],
                    "output": {
                        "value": "[format('Server=tcp:{0}.database.windows.net,1433;Initial Catalog={1};Persist Security Info=False;User ID={2};Password={3};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', parameters('server'), parameters('database'), parameters('user'), parameters('password'))]",
                        "type": "securestring"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[parameters('storageAccountName')]",
            "location": "[variables('defaultLocation')]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[variables('defaultLocation')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('sqlServerSaLogin')]",
                "administratorLoginPassword": "[parameters('sqlServerSaPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(parameters('sqlServerName'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "dmytro@mdmsft.net",
                "sid": "[parameters('objectId')]",
                "tenantId": "[parameters('tenantId')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('sqlServerName'), '/AppleSystemStatus')]",
            "location": "[variables('defaultLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "storageAccountType": "GRS"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('sqlServerName'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-12-01-preview",
            "name": "[parameters('containerRegistryName')]",
            "location": "[variables('defaultLocation')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "adminUserEnabled": true,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('insightsName')]",
            "location": "[variables('defaultLocation')]",
            "kind": "web",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverFarmName')]",
            "location": "[variables('defaultLocation')]",
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('siteName')]",
            "location": "[variables('defaultLocation')]",
            "kind": "functionapp,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverFarmName'))]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('siteName'), '/web')]",
            "location": "[variables('defaultLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "linuxFxVersion": "[concat('DOCKER|', parameters('containerRegistryName'), '.azurecr.io/aaplss:latest')]",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "Disabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[variables('defaultLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "tenantId": "[reference(resourceId('Microsoft.Web/sites', parameters('siteName')), '2018-11-01', 'Full').identity.tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('siteName')), '2018-11-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('objectId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Decrypt",
                                "Encrypt",
                                "UnwrapKey",
                                "WrapKey",
                                "Verify",
                                "Sign",
                                "Purge"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Purge"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers",
                                "Purge"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('keyVaultName'), '/AppleSystemStatus')]",
            "location": "[variables('defaultLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": "[sql.getConnectionString(parameters('sqlServerName'), 'AppleSystemStatus', parameters('sqlServerLogin'), parameters('sqlServerPassword'))]"
            }
        },
        {
            "name": "[parameters('workspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-08-01",
            "location": "[variables('defaultLocation')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "workspaceCapping": {
                    "dailyQuotaGb": 1
                },
                "publicNetworkAccessForIngestion": "enabled",
                "publicNetworkAccessForQuery": "enabled"
            }
        }
    ]
}