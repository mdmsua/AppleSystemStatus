name: default

on:
  workflow_dispatch:
  push:
    branches:
      - canary

env:
  IMAGE_REPOSITORY: canary.azurecr.io/aaplss

jobs:
  provision:
    environment: canary
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/arm-deploy@v1
        with:
          resourceGroupName: canary
          template: .azure/template.json
          parameters: sqlServerSaPassword=${{ secrets.SA_PASSWORD }} sqlServerPassword=${{ secrets.DB_PASSWORD }} objectId=${{ secrets.OBJECT_ID }} tenantId=${{ secrets.TENANT_ID }}
          deploymentName: github-${GITHUB_RUN_ID}

  build:
    needs: provision
    environment: canary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Restore tools
        run: dotnet tool restore
      - name: Restore dependencies
        run: dotnet restore
      - name: Build solution
        run: dotnet build --no-restore --configuration Release
      - name: Update database
        run: dotnet ef database update --no-build --configuration Release --project AppleSystemStatus
        env:
          DatabaseConnectionString: "Server=tcp:canary.database.windows.net,1433;Initial Catalog=AppleSystemStatus;Persist Security Info=False;User ID=${{ secrets.SA_USERNAME }};Password=${{ secrets.SA_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
          ApplicationUsername: ${{ secrets.DB_USERNAME }}
          ApplicationPassword: ${{ secrets.DB_PASSWORD }}

  deploy:
    needs: build
    environment: canary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Registry
        uses: docker/login-action@v1 
        with:
          registry: canary.azurecr.io
          username: canary
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:latest,${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          build-args: |
            VAULT_URI=${{ secrets.VAULT_URI }}
            VAULT_SECRET=${{ secrets.VAULT_SECRET }}